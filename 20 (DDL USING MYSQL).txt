20 (DDL USING MYSQL)


Create following tables using a given schema and insert appropriate data into the same:
Customer (CustID, Name, Cust_Address, Phone_no, Email_ID, Age)
Branch (Branch ID, Branch_Name, Address)
Account (Account_no, Branch ID, CustID, open_date, Account_type, Balance)
1. Create the tables with referential integrity.
2. Draw the ER diagram for the same.
3. Create a View as Saving account displaying the customer details with the open date as 16/8/2018.
4. Update the View with Cust_Address as Pune for CustID =103.
5. Create a View as Loan account displaying the customer details with the open date as 16/2/2018.
6. Create an Index on primary key column of table Customer.
7. Create an Index on primary key column of table Branch.
8. Create a sequence on Customer Table.
9. Create synonym ‘Cust_info’ for branch table.


ANS: create database IDBI;
use IDBI;

-- 1. Create Customer table with primary key and insert data
CREATE TABLE Customer (
    CustID INT PRIMARY KEY,
    Name VARCHAR(50),
    Cust_Address VARCHAR(100),
    Phone_no VARCHAR(15),
    Email_ID VARCHAR(50),
    Age INT
);

-- Insert data into Customer table
INSERT INTO Customer (CustID, Name, Cust_Address, Phone_no, Email_ID, Age) VALUES
(101, 'Alice', 'Mumbai', '9876543210', 'alice@example.com', 30),
(102, 'Bob', 'Pune', '8765432109', 'bob@example.com', 40),
(103, 'Charlie', 'Delhi', '7654321098', 'charlie@example.com', 35),
(104, 'Diana', 'Pune', '6543210987', 'diana@example.com', 45);

-- 1. Create Branch table with primary key and insert data
CREATE TABLE Branch (
    Branch_ID INT PRIMARY KEY,
    Branch_Name VARCHAR(50),
    Address VARCHAR(100)
);

-- Insert data into Branch table
INSERT INTO Branch (Branch_ID, Branch_Name, Address) VALUES
(1, 'Main Branch', 'Mumbai'),
(2, 'Pune Branch', 'Pune'),
(3, 'Delhi Branch', 'Delhi');

-- 1. Create Account table with primary and foreign keys and insert data
CREATE TABLE Account (
    Account_no INT PRIMARY KEY,
    Branch_ID INT,
    CustID INT,
    open_date DATE,
    Account_type VARCHAR(20),
    Balance DECIMAL(10, 2),
    FOREIGN KEY (Branch_ID) REFERENCES Branch(Branch_ID),
    FOREIGN KEY (CustID) REFERENCES Customer(CustID)
);

-- Insert data into Account table
INSERT INTO Account (Account_no, Branch_ID, CustID, open_date, Account_type, Balance) VALUES
(1001, 1, 101, '2018-08-16', 'Saving Account', 10000.00),
(1002, 2, 102, '2019-05-21', 'Checking Account', 20000.00),
(1003, 3, 103, '2018-02-16', 'Loan Account', 15000.00),
(1004, 2, 104, '2018-08-16', 'Saving Account', 5000.00);

Step 2: Draw the ER Diagram
ER Diagram Structure
The ER diagram would include:

Customer table, where CustID is the primary key.
Branch table, where Branch_ID is the primary key.
Account table, where Account_no is the primary key and has foreign keys Branch_ID (linking to Branch) and CustID (linking to Customer).

Step 3: Create Views

-- 3. Create a view named Saving_account displaying customer details with open date as '16/8/2018'

CREATE VIEW Saving_account AS
SELECT c.CustID, c.Name, c.Cust_Address, c.Phone_no, c.Email_ID, c.Age, a.open_date, a.Account_type, a.Balance
FROM Customer c
JOIN Account a ON c.CustID = a.CustID
WHERE a.Account_type = 'Saving Account' AND a.open_date = '2018-08-16';

-- 5. Create a view named Loan_account displaying customer details with open date as '16/2/2018'

CREATE VIEW Loan_account AS
SELECT c.CustID, c.Name, c.Cust_Address, c.Phone_no, c.Email_ID, c.Age, a.open_date, a.Account_type, a.Balance
FROM Customer c
JOIN Account a ON c.CustID = a.CustID
WHERE a.Account_type = 'Loan Account' AND a.open_date = '2018-02-16';

Step 4: Update the View

-- 4. Update the view Saving_account to set Cust_Address as 'Pune' for CustID = 103

UPDATE Customer
SET Cust_Address = 'Pune'
WHERE CustID = 103;

Step 5: Create Indexes on Primary Key Columns

-- 6. Create an index on primary key column of the Customer table

CREATE INDEX idx_CustID ON Customer(CustID);

-- 7. Create an index on primary key column of the Branch table

CREATE INDEX idx_BranchID ON Branch(Branch_ID);

Step 6: Create a Sequence on Customer Table

-- 8. Create a sequence on Customer table for CustID

CREATE SEQUENCE cust_seq
START WITH 105
INCREMENT BY 1;

-- Example of using the sequence to insert a new record in Customer
INSERT INTO Customer (CustID, Name, Cust_Address, Phone_no, Email_ID, Age) 
VALUES (cust_seq.NEXTVAL, 'Eve', 'Chennai', '5432109876', 'eve@example.com', 32);


Step 7: Create a Synonym

-- 9. Create a synonym ‘Cust_info’ for Branch table

CREATE SYNONYM Cust_info FOR Branch;



